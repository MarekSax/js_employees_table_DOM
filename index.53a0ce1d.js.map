{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAY,SAAS,aAAa,CAAC,SACnC,EAAe,SAAS,gBAAgB,CAAC,YACzC,EAAY,EAAU,IAAI,CAI5B,EAAY,CAAA,EAGhB,EAAa,OAAO,CAAC,SAAA,CAArB,EAA+B,OAAA,EAAO,gBAAgB,CAAC,QAAS,SAAA,CAAjC,EAC7B,IAAM,EAAQ,EAAI,GAAc,OAAO,CAAC,EAAE,MAAM,EAE1C,EAAc,EAAI,GAAW,IAAI,CAAC,SAAC,CAAA,CAAG,CAA5C,EACE,IAAM,EAAW,EAAE,QAAQ,CAAC,EAAM,CAAC,SAAS,CACtC,EAAW,EAAE,QAAQ,CAAC,EAAM,CAAC,SAAS,QAE5C,AAAI,GAAa,IAAY,EAAE,MAAM,CACnC,AAAI,AAAgB,MAAhB,CAAQ,CAAC,EAAE,EAAa,MAAM,GAK3B,EAAS,aAAa,CAAC,GAJrB,OAAO,EAAS,OAAO,CAAC,MAAO,KAClC,OAAO,EAAS,OAAO,CAAC,MAAO,KAMvC,AAAI,AAAgB,MAAhB,CAAQ,CAAC,EAAE,EAAa,MAAM,GAK3B,EAAS,aAAa,CAAC,GAJrB,OAAO,EAAS,OAAO,CAAC,MAAO,KAClC,OAAO,EAAS,OAAO,CAAC,MAAO,IAIvC,GAEA,AAAA,EAAU,MAAM,CAAhB,KAAA,CAAA,EAAiB,EAAG,IACpB,EAAY,CAAC,EACb,EAAU,EAAE,MAAM,AACpB,E,GAMA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAa,EAAE,MAAM,CAAC,OAAO,CAAC,MAEhC,GAAe,IAAgB,GACjC,EAAY,SAAS,CA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tableBody = document.querySelector(\"tbody\");\nvar tableHeaders = document.querySelectorAll(\"thead th\");\nvar tableRows = tableBody.rows;\n// sort table\nvar descOrder = false;\nvar sortCol;\ntableHeaders.forEach(function(header) {\n    return header.addEventListener(\"click\", function(e) {\n        var _tableBody;\n        var index = _to_consumable_array(tableHeaders).indexOf(e.target);\n        var sortedTable = _to_consumable_array(tableRows).sort(function(a, b) {\n            var aContent = a.children[index].innerHTML;\n            var bContent = b.children[index].innerHTML;\n            if (descOrder && sortCol === e.target) {\n                if (aContent[0] === \"$\" || !isNaN(aContent)) return Number(bContent.replace(/\\D/g, \"\")) - Number(aContent.replace(/\\D/g, \"\"));\n                return bContent.localeCompare(aContent);\n            }\n            if (aContent[0] === \"$\" || !isNaN(aContent)) return Number(aContent.replace(/\\D/g, \"\")) - Number(bContent.replace(/\\D/g, \"\"));\n            return aContent.localeCompare(bContent);\n        });\n        (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(sortedTable));\n        descOrder = !descOrder;\n        sortCol = e.target;\n    });\n});\n// select row\nvar selectedRow;\ntableBody.addEventListener(\"click\", function(e) {\n    var currentRow = e.target.closest(\"tr\");\n    if (selectedRow && selectedRow !== currentRow) selectedRow.classList.remove(\"active\");\n    if (currentRow) {\n        currentRow.classList.add(\"active\");\n        selectedRow = currentRow;\n    }\n});\n// add form\nvar form = document.createElement(\"form\");\nform.noValidate = true;\nform.classList.add(\"new-employee-form\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    var _loop = function() {\n        var header = _step.value;\n        var label = document.createElement(\"label\");\n        label.textContent = header.textContent + \": \";\n        if (header.textContent !== \"Office\") {\n            var input = document.createElement(\"input\");\n            input.dataset.qa = input.name = header.textContent.toLowerCase();\n            input.setAttribute(\"required\", \"\");\n            switch(header.textContent){\n                case \"Age\":\n                    input.type = \"number\";\n                    input.min = 18;\n                    input.max = 90;\n                    break;\n                case \"Salary\":\n                    input.type = \"number\";\n                    break;\n                default:\n                    input.type = \"text\";\n                    break;\n            }\n            label.append(input);\n        } else {\n            var offices = _to_consumable_array(tableRows).map(function(row) {\n                return row.cells[2].innerText;\n            }).filter(function(item, index, array) {\n                return array.indexOf(item) === index;\n            }).sort();\n            var select = document.createElement(\"select\");\n            select.dataset.qa = select.name = header.textContent.toLowerCase();\n            select.setAttribute(\"required\", \"\");\n            var optionDefault = document.createElement(\"option\");\n            optionDefault.innerText = \"Choose your office\";\n            optionDefault.setAttribute(\"disabled\", \"\");\n            optionDefault.setAttribute(\"selected\", \"\");\n            optionDefault.value = \"\";\n            select.append(optionDefault);\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = offices[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var office = _step1.value;\n                    var option = document.createElement(\"option\");\n                    option.value = option.innerText = office;\n                    select.append(option);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            label.append(select);\n        }\n        form.append(label);\n    };\n    for(var _iterator = tableHeaders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar saveButton = document.createElement(\"button\");\nsaveButton.innerText = \"Save to table\";\nform.append(saveButton);\ndocument.body.append(form);\n// submit form\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var fields = _to_consumable_array(e.target.elements);\n    if (fields.some(function(field) {\n        return field.validity.valueMissing;\n    })) pushNotification(\"error\", \"All fields must be filled\", \"error\");\n    else if (fields[0].value.length < 4) pushNotification(\"error\", \"Name must be at least 4 characters long.\", \"error\");\n    else if (fields[3].validity.rangeUnderflow || fields[3].validity.rangeOverflow) pushNotification(\"error\", \"Age must be between 18 and 90.\", \"error\");\n    else {\n        var data = new FormData(form);\n        var newRow = tableBody.insertRow(0);\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = data.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var entry = _step.value;\n                var newCell = newRow.insertCell();\n                if (entry[0] === \"salary\") {\n                    newCell.innerText = \"$\".concat(Number(entry[1]).toLocaleString(\"en-US\"));\n                    continue;\n                }\n                newCell.innerText = entry[1];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        pushNotification(\"success\", \"User added to table\", \"success\");\n    }\n});\n// pushNotification function\nvar pushNotification = function(title, description, type) {\n    var body = document.body;\n    body.insertAdjacentHTML(\"beforeend\", '\\n    <div class=\"'.concat(type, ' notification\" data-qa=\"notification\">\\n      <h2 class=\"title\">').concat(title, \"</h2>\\n      <p>\").concat(description, \"</p>\\n    </div>\\n  \"));\n    var message = document.querySelector(\".\".concat(type));\n    setTimeout(function() {\n        message.remove();\n    }, 2000);\n};\n// cell edit\nvar tableCells = tableBody.querySelectorAll(\"td\");\ntableCells.forEach(function(cell) {\n    var currentValue;\n    cell.addEventListener(\"dblclick\", function(e) {\n        var target = e.target;\n        currentValue = target.innerText;\n        e.target.innerText = \"\";\n        var cellInput = document.createElement(\"input\");\n        cellInput.classList.add(\"cell-input\");\n        cellInput.value = currentValue;\n        if (target === target.parentElement.children[3]) cellInput.setAttribute(\"type\", \"number\");\n        if (target === target.parentElement.children[4]) {\n            cellInput.setAttribute(\"type\", \"number\");\n            cellInput.value = Number(currentValue.replace(/\\D/g, \"\"));\n        }\n        e.target.append(cellInput);\n        cellInput.focus();\n        var handleCellInput = function() {\n            if (cellInput.value.trim() === \"\") target.innerText = currentValue;\n            else target.innerText = cellInput.value;\n            if (target === target.parentElement.children[4]) target.innerText = \"$\".concat(Number(cellInput.value).toLocaleString(\"en-US\"));\n        };\n        cellInput.addEventListener(\"blur\", function() {\n            handleCellInput();\n        });\n        cellInput.addEventListener(\"keypress\", function(f) {\n            if (f.key === \"Enter\") handleCellInput();\n        });\n    });\n});\n\n//# sourceMappingURL=index.53a0ce1d.js.map\n","'use strict';\n\nconst tableBody = document.querySelector('tbody');\nconst tableHeaders = document.querySelectorAll('thead th');\nconst tableRows = tableBody.rows;\n\n// sort table\n\nlet descOrder = false;\nlet sortCol;\n\ntableHeaders.forEach(header => header.addEventListener('click', e => {\n  const index = [...tableHeaders].indexOf(e.target);\n\n  const sortedTable = [...tableRows].sort((a, b) => {\n    const aContent = a.children[index].innerHTML;\n    const bContent = b.children[index].innerHTML;\n\n    if (descOrder && sortCol === e.target) {\n      if (aContent[0] === '$' || !isNaN(aContent)) {\n        return Number(bContent.replace(/\\D/g, ''))\n          - Number(aContent.replace(/\\D/g, ''));\n      };\n\n      return bContent.localeCompare(aContent);\n    };\n\n    if (aContent[0] === '$' || !isNaN(aContent)) {\n      return Number(aContent.replace(/\\D/g, ''))\n        - Number(bContent.replace(/\\D/g, ''));\n    };\n\n    return aContent.localeCompare(bContent);\n  });\n\n  tableBody.append(...sortedTable);\n  descOrder = !descOrder;\n  sortCol = e.target;\n}));\n\n// select row\n\nlet selectedRow;\n\ntableBody.addEventListener('click', (e) => {\n  const currentRow = e.target.closest('tr');\n\n  if (selectedRow && selectedRow !== currentRow) {\n    selectedRow.classList.remove('active');\n  }\n\n  if (currentRow) {\n    currentRow.classList.add('active');\n    selectedRow = currentRow;\n  }\n});\n\n// add form\n\nconst form = document.createElement('form');\n\nform.noValidate = true;\nform.classList.add('new-employee-form');\n\nfor (const header of tableHeaders) {\n  const label = document.createElement('label');\n\n  label.textContent = header.textContent + ': ';\n\n  if (header.textContent !== 'Office') {\n    const input = document.createElement('input');\n\n    input.dataset.qa = input.name = header.textContent.toLowerCase();\n    input.setAttribute('required', '');\n\n    switch (header.textContent) {\n      case 'Age':\n        input.type = 'number';\n        input.min = 18;\n        input.max = 90;\n        break;\n      case 'Salary':\n        input.type = 'number';\n        break;\n      default:\n        input.type = 'text';\n        break;\n    }\n    label.append(input);\n  } else {\n    const offices = [...tableRows]\n      .map(row => row.cells[2].innerText)\n      .filter((item, index, array) => array.indexOf(item) === index)\n      .sort();\n\n    const select = document.createElement('select');\n\n    select.dataset.qa = select.name = header.textContent.toLowerCase();\n\n    select.setAttribute('required', '');\n\n    const optionDefault = document.createElement('option');\n\n    optionDefault.innerText = 'Choose your office';\n    optionDefault.setAttribute('disabled', '');\n    optionDefault.setAttribute('selected', '');\n    optionDefault.value = '';\n    select.append(optionDefault);\n\n    for (const office of offices) {\n      const option = document.createElement('option');\n\n      option.value = option.innerText = office;\n      select.append(option);\n    }\n\n    label.append(select);\n  }\n\n  form.append(label);\n}\n\nconst saveButton = document.createElement('button');\n\nsaveButton.innerText = 'Save to table';\nform.append(saveButton);\ndocument.body.append(form);\n\n// submit form\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const fields = [...e.target.elements];\n\n  if (fields.some(field => field.validity.valueMissing)) {\n    pushNotification(\n      'error',\n      'All fields must be filled',\n      'error',\n    );\n  } else if (fields[0].value.length < 4) {\n    pushNotification(\n      'error',\n      'Name must be at least 4 characters long.',\n      'error',\n    );\n  } else if (fields[3].validity.rangeUnderflow\n      || fields[3].validity.rangeOverflow) {\n    pushNotification(\n      'error',\n      'Age must be between 18 and 90.',\n      'error',\n    );\n  } else {\n    const data = new FormData(form);\n    const newRow = tableBody.insertRow(0);\n\n    for (const entry of data.entries()) {\n      const newCell = newRow.insertCell();\n\n      if (entry[0] === 'salary') {\n        newCell.innerText = `$${Number(entry[1]).toLocaleString('en-US')}`;\n        continue;\n      }\n      newCell.innerText = entry[1];\n    };\n\n    pushNotification(\n      'success',\n      'User added to table',\n      'success',\n    );\n  }\n});\n\n// pushNotification function\n\nconst pushNotification = (title, description, type) => {\n  const body = document.body;\n\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"${type} notification\" data-qa=\"notification\">\n      <h2 class=\"title\">${title}</h2>\n      <p>${description}</p>\n    </div>\n  `);\n\n  const message = document.querySelector(`.${type}`);\n\n  setTimeout(() => {\n    message.remove();\n  }, 2000);\n};\n\n// cell edit\n\nconst tableCells = tableBody.querySelectorAll('td');\n\ntableCells.forEach(cell => {\n  let currentValue;\n\n  cell.addEventListener('dblclick', e => {\n    const target = e.target;\n\n    currentValue = target.innerText;\n\n    e.target.innerText = '';\n\n    const cellInput = document.createElement('input');\n\n    cellInput.classList.add('cell-input');\n    cellInput.value = currentValue;\n\n    if (target === target.parentElement.children[3]) {\n      cellInput.setAttribute('type', 'number');\n    };\n\n    if (target === target.parentElement.children[4]) {\n      cellInput.setAttribute('type', 'number');\n      cellInput.value = Number(currentValue.replace(/\\D/g, ''));\n    };\n\n    e.target.append(cellInput);\n\n    cellInput.focus();\n\n    const handleCellInput = () => {\n      if (cellInput.value.trim() === '') {\n        target.innerText = currentValue;\n      } else {\n        target.innerText = cellInput.value;\n      }\n\n      if (target === target.parentElement.children[4]) {\n        target.innerText = `$${Number(cellInput.value)\n          .toLocaleString('en-US')}`;\n      }\n    };\n\n    cellInput.addEventListener('blur', () => {\n      handleCellInput();\n    });\n\n    cellInput.addEventListener('keypress', f => {\n      if (f.key === 'Enter') {\n        handleCellInput();\n      }\n    });\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tableBody","document","querySelector","tableHeaders","querySelectorAll","tableRows","rows","descOrder","forEach","header","addEventListener","e","index","indexOf","target","sortedTable","sort","a","b","aContent","children","innerHTML","bContent","sortCol","isNaN","localeCompare","Number","replace","append","apply","currentRow","closest","selectedRow","classList","remove","add","form","createElement","noValidate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","_loop","value","label","textContent","input","dataset","qa","toLowerCase","setAttribute","type","min","max","offices","map","row","cells","innerText","filter","item","array","select","optionDefault","_step1","office","option","err","return","saveButton","body","preventDefault","fields","elements","some","field","validity","valueMissing","pushNotification","rangeUnderflow","rangeOverflow","data","FormData","newRow","insertRow","entries","entry","newCell","insertCell","concat","toLocaleString","title","description","insertAdjacentHTML","message","setTimeout","tableCells","cell","currentValue","cellInput","parentElement","focus","handleCellInput","trim","f","key"],"version":3,"file":"index.53a0ce1d.js.map"}